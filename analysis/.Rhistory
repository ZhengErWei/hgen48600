source('~/.active-rstudio-document', echo=TRUE)
sessionInfo()
library(ashr)
sessionInfo()
install.packages("edgeR")
install.packages("cate")
source("https://bioconductor.org/biocLite.R")
biocLite("edgeR")
install_github("stephenslab/flashr")
devtools::install_github("stephenslab/flashr")
devtools::install_github("stephenslab/flashr",auth_token=e44fcff4a1fd562ab9cc7a0c598a4496dc10c883)
devtools::install_github("stephenslab/flashr",auth_token="e44fcff4a1fd562ab9cc7a0c598a4496dc10c883")
?flashr
??flashr
N = 100
P = 200
Y = matrix(rnorm(N*P,0,1),ncol=P)
g = flash(Y)
N = 100
P = 200
Y = matrix(rnorm(N*P,0,1),ncol=P)
g = flashr::flash(Y)
g
flash_hd
flashr::flash_hd
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/Dropbox/Documents/git/poisson/analysis")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
r.voom
dim(r.voom)
names(r.voom)
r.voom$v
dim(r.voom$v)
r.voom$v[1:10,]
Ysub=lcpm(counts)
Ysub
??flashr
??flashr
test = flashr::flash(Y)
test[1,]
test$l
flash$f
test$f
test = flashr::greedy(Y)
test = flashr::greedy(Y,15)
test
names(test)
test$l
dim(test$l)
dim(test$f)
dim(Y)
test = flashr::greedy(Ysub,15)
Ysub.fl = test
dim(Ysub.fl$f)
dim(Ysub.fl$l)
plot(Ysub.fl$f[1,])
plot(Ysub.fl$f[,1])
plot(Ysub.fl$l[1,])
plot(Ysub.fl$l[,1])
plot(Ysub.fl$l[,2])
plot(Ysub.fl$f[2,])
plot(Ysub.fl$f[1,])
plot(Ysub.fl$f[,1])
plot(Ysub.fl$f[,2])
plot(Ysub.fl$f[,3])
plot(Ysub.fl$f[,4])
var(Ysub.fl$l[,1] %*% Ysub.fl$f[1,])
dim(Ysub.fl$l[,1] %*% t(Ysub.fl$f[1,]))
mean((Ysub.fl$l[,1] %*% t(Ysub.fl$f[1,]))^2)
mean(Ysub^2)
mean((Ysub.fl$l[,2] %*% t(Ysub.fl$f[2,]))^2)
mean((Ysub.fl$l[,3] %*% t(Ysub.fl$f[3,]))^2)
dim(Ysub.fl$l)
pve = function(L,F){
k = ncol(L)
pve = rep(1,k)
for(i in 1:k){
pve[i]= mean((L[,i] %*% F[i,])^2)
}
return(pve)
}
pve = function(L,F){
k = ncol(L)
p = rep(1,k)
for(i in 1:k){
p[i]= mean((L[,i] %*% F[i,])^2)
}
return(p)
}
pve = function(fl){
k = ncol(fl$l)
p = rep(1,k)
for(i in 1:k){
p[i]= mean((fl$l[,i] %*% fl$f[i,])^2)
}
return(p)
}
pve(Ysub.fl)
pve = function(fl){
k = ncol(fl$l)
p = rep(1,k)
for(i in 1:k){
p[i]= mean((fl$l[,i] %*% t(fl$f[i,]))^2)
}
return(p)
}
pve = function(fl){
k = ncol(fl$l)
p = rep(1,k)
for(i in 1:k){
p[i]= mean((fl$l[,i] %*% t(fl$f[i,]))^2)
}
return(p)
}
pve(Ysub.fl)
fl=Ysub.fl
k = ncol(fl$l)
k
p = rep(1,k)
for(i in 1:k){
p[i]= mean((fl$l[,i] %*% t(fl$f[i,]))^2)
}
dim(fl$l[,1])
length(fl$l[,1])
dim(fl$f)
dim(fl$l)
pve = function(fl){
k = ncol(fl$l)
p = rep(0,k)
for(i in 1:k){
p[i]= mean((fl$l[,i] %*% t(fl$f[,i]))^2)
}
return(p)
}
pve(Ysub.fl)
plot(pve(Ysub.fl))
Ysub[1,]
apply(Ysub,1,mean)
Ysub[,1]
Ysub[1,]
Ysub[2,]
plot(colsums(Ysub),Ysub.fl$f[,1])
plot(colSums(Ysub),Ysub.fl$f[,1])
plot(rowSums(Ysub),Ysub.fl$l[,1])
p
Ysub.fl.pve = pve(Ysub.fl)
plot(Ysub.fl.pve[-1])
plot(Ysub.fl[,2])
plot(Ysub.fl$l[,2])
plot(Ysub.fl$l[,3])
plot(Ysub.fl$l[,4])
plot(Ysub.fl$l[,5])
plot(Ysub.fl$l[,6])
mean(Ysub^2)
Ysub.fl.pve
Ysub.fl.pve/26.10266
res = Ysub - Ysub.fl$l[,1] %*% t(Ysub.fl$f[,1])
mean(res^2)
Ysub.fl.pve = pve(Ysub.fl)
mean(Ysub.fl.pve[-1]/mean(res^2))
plot(Ysub.fl.pve[-1]/mean(res^2))
res = Ysub - Ysub.fl$l %*% t(Ysub.fl$f)
res
cor(res)
hist(cor(res))
dim(counts)
?lmFit
lmFit(res,design = cbind(rep(1,10),condition))
res.lm= lmFit(res,design = cbind(rep(1,10),condition))
names(res.lm)
res.ebayes = eBayes(res.lm)
hist(r.ebayes$p.value[,2],main="histogram of effect tests")
res = Ysub - Ysub.fl$l %*% t(Ysub.fl$f)
res[1,]
cor(res)
image(cor(res))
colMeans(res)
rowMeans(res)
res.svd = svd(res)
plot(res.svd$d)
?backfit
??backfit
image(cor(Ysub))
head(cor(Ysub))
res1 = Ysub - Ysub.fl$l[,1] %*% t(Ysub.fl$f[,1])
cor(res1)
image(cor(res1))
image(cor(res))
res = Ysub - Ysub.fl$l %*% t(Ysub.fl$f)
res.lm= lmFit(res,design = cbind(rep(1,10),condition))
res.ebayes = eBayes(res.lm)
hist(res.ebayes$p.value[,2],main="histogram of effect tests")
ccr5 = read.table("../data/CCR5/CCR5.freq.txt",header=TRUE)
setwd("~/Dropbox/Documents/git/hgen48600/analysis")
ccr5 = read.table("../data/CCR5/CCR5.freq.txt",header=TRUE)
ccr5
ccr5$Freq * ccr5$SampleSize
View(ccr5)
ccr5$Freq * ccr5$SampleSize*2
install.packages("geosphere")
??geosphere
distCosine(c(0,0),ccr5[,1:2])
geosphere::distCosine(c(0,0),ccr5[,1:2])
View(ccr5)
geosphere::distCosine(c(0,0),ccr5[,2:1])
geosphere::distCosine(c(0,0),ccr5[,1:2])
?geosphere::distm
distm(ccr5[,1:2])
geosphere::distm(ccr5[,1:2])
image(geosphere::distm(ccr5[,1:2]))
min(geosphere::distm(ccr5[,1:2]))
summary(geosphere::distm(ccr5[,1:2]))
d=geosphere::distm(ccr5[,1:2])
d=geosphere::distm(ccr5[,1:2]-360)
test = ccr5[,1:2]
test[,1]= ifelse(test[,1]>180,360-test[,1],test[,1])
test[,1]
ccr5[,1]
test = ccr5[,1:2]
test[,1]= ifelse(test[,1]>180,test[,1]-360,test[,1])
test[,1]
d1 = geosphere::distm(ccr5[,1:2])
d2 = geosphere::distm(test)
d1==d2
sum(d1==d2)
d1-d2
ccr5 = read.table("../data/CCR5/CCR5.freq.txt",header=TRUE)
ccr5 = ifelse(ccr5[,1]>180,ccr5[,1]-360,ccr5[,1]) # changes longitudes>180 to negative
image(geosphere::distm(ccr5[,1:2]))
ccr5 = read.table("../data/CCR5/CCR5.freq.txt",header=TRUE)
ccr5[,1] = ifelse(ccr5[,1]>180,ccr5[,1]-360,ccr5[,1]) # changes longitudes>180 to negative
image(geosphere::distm(ccr5[,1:2]))
ccr5[,3]
ccr5$count = round(ccr5$Freq* ccr5$SampleSize * 2)
ccr5$count
ccr5$fhat = (ccr5$count+1)/(ccr5$SampleSize*2+2)
ccr5$fhat
hist(ccr5$fhat)
hist(log(ccr5$fhat/(1-ccr5$fhat)))
d = geosphere::distm(ccr5[,1:2])
hist(d)
?dist
dist(c(1,2,3))
dist(c(1,2,3,5))
as.matrix(dist(c(1,2,3,5)))
as.matrix(dist(c(1,2,3,5),diag=TRUE))
ccr5$count = round(ccr5$Freq* ccr5$SampleSize * 2)
ccr5$fhat = (ccr5$count+1)/(ccr5$SampleSize*2+2)
ccr5$Z = log(ccr5$fhat/(1-ccr5$fhat))
hist(ccr5$Z)
hist(as.matrix(dist(ccr5$Z,diag=TRUE)))
plot(Z.dist,geo.dist)
Z.dist = as.matrix(dist(ccr5$Z,diag=TRUE))
plot(Z.dist,geo.dist)
geo.dist = geosphere::distm(ccr5[,1:2])
hist(geo.dist)
plot(Z.dist,geo.dist)
plot(Z.dist,geo.dist,pch=".")
Z.dist[1,1]
Z.dist[1,2]
Z.dist[1,3]
Z[1]
ccr5$Z[1]
ccr5$Z[2]
ccr5$Z[3]
head(ccr5)
27/82
27/(2*82)
27/((2*82)+2)
27/((2*82)+1)
27/((2*80)+1)
27/((2*80)+2)
geo.dist = geosphere::distm(ccr5[,1:2])
geo.dist2 = geosphere::distm(ccr5[1:3,1:2])
geo.dist2
geo.dist[1:3,1:3]
install.packages("geoR")
?geoR
??geoR
breaks = seq(0, 1.5, l = 11)
v1 <- geoR::variog(coords = ccr5[,1:2], data = ccr5$Z, breaks = breaks)
v1.summary
v1.summary
v1.summary <- cbind(c(1:10), v1$v, v1$n)
colnames(v1.summary) <- c("lag", "semi-variance", "# of pairs")
v1.summary
summary(geo.dist)
summary(unlist(geo.dist))
geo.dist[1,]
geo.dist = geosphere::distm(ccr5[,1:2])/1000
hist(geo.dist)
breaks = seq(0, 6000, l = 11)
v1 <- geoR::variog(coords = ccr5[,1:2], data = ccr5$Z, breaks = breaks)
v1.summary <- cbind(c(1:10), v1$v, v1$n)
colnames(v1.summary) <- c("lag", "semi-variance", "# of pairs")
v1.summary
??variog
v1 <- geoR::variog(coords = ccr5[,1:2], data = ccr5$Z)
plot(v1)
plot(Z.dist,geo.dist,pch=".",ylim=c(0,100))
plot(v1)
names(v1)
v1$n
v1$u
plot(ccr5$Lat,ccr5$Z)
plot(ccr5$Long,ccr5$Z)
plot(ccr5$Lat,ccr5$Z)
Lat.dist = as.matrix(dist(ccr5$Lat,diag=TRUE))
plot(Lat.dist,Z.dist)
hexbin(Lat.dist,Z.dist)
plot(Lat.dist,Z.dist,pch="l")
plot(Lat.dist,Z.dist,pch=".")
plot(ccr5$Lat,ccr5$Z)
plot(ccr5$Long,ccr5$Z)
image(ccr5$Lat,ccr5$Long, ccr5$Z)
image(x=ccr5$Lat,y=ccr5$Long, z=ccr5$Z)
plot(x=ccr5$Lat,y=ccr5$Long, ccr5$Z)
plot(x=ccr5$Lat,y=ccr5$Long)
text(ccr5$Z,x=ccr5$Lat,y=ccr5$Long)
text(round(ccr5$Z),x=ccr5$Lat,y=ccr5$Long)
plot(x=ccr5$Lat,y=ccr5$Long)
text(round(ccr5$Z),x=ccr5$Lat,y=ccr5$Long)
plot(x=ccr5$Lat,y=ccr5$Long,type="n")
text(round(ccr5$Z),x=ccr5$Lat,y=ccr5$Long)
text(round(ccr5$Z,2),x=ccr5$Lat,y=ccr5$Long)
plot(x=ccr5$Lat,y=ccr5$Long,type="n")
text(round(ccr5$Z,2),x=ccr5$Lat,y=ccr5$Long)
text(round(ccr5$Z,1),x=ccr5$Lat,y=ccr5$Long)
plot(x=ccr5$Lat,y=ccr5$Long,type="n")
text(round(ccr5$Z,1),x=ccr5$Lat,y=ccr5$Long)
text(round(ccr5$Z,1),x=ccr5$Lat,y=ccr5$Long,pch=0.5)
text(round(ccr5$Z,1),x=ccr5$Lat,y=ccr5$Long,cex=0.5)
plot(x=ccr5$Lat,y=ccr5$Long,type="n")
text(round(ccr5$Z,1),x=ccr5$Lat,y=ccr5$Long,cex=0.5)
temp1 = cov(c(1,1000,2),geo.dist)
temp1 = cov(c(1,1000,2),as.matrix(geo.dist))
dim(as.matrix(geo.dist))
my_sigma = function(a,d){
a[1] * exp(-(d/a[2])^a[3])
}
temp1 = cov(c(1,1000,2),as.matrix(geo.dist))
temp1 = my_sigma(c(1,1000,2),as.matrix(geo.dist))
eigen(temp1)
eigen(temp1)$values
plot(eigen(temp1)$values)
chol2inv(chol(temp1))
chol2inv(chol(temp1))[1,]
plot(chol2inv(chol(temp1))[1,])
?dmvnorm
??dmvnorm
lik = function(m,a){
mvtnorm::dmvnorm(ccr5$Z,mean = rep(m,length(ccr5$Z)), sigma=my_sigma(a,geo.dist))
}
lik(2,c(1,1000,2))
lik(2,c(1,10000,2))
mvtnorm::dmvnorm(ccr5$Z,mean = rep(m,length(ccr5$Z)), sigma=my_sigma(a,geo.dist),log=TRUE)
llik = function(m,a){
mvtnorm::dmvnorm(ccr5$Z,mean = rep(m,length(ccr5$Z)), sigma=my_sigma(a,geo.dist),log=TRUE)
}
llik(2,c(1,1000,2))
llik(2,c(1,1000,2))
llik(2,c(1,1000,1))
llik(2,c(1,1000,0.1))
llik(2,c(1,100,0.1))
llik(2,c(1,100,2))
llik(2,c(1,100,1))
?optim
llik = function(t){
mvtnorm::dmvnorm(ccr5$Z,mean = rep(t[1],length(ccr5$Z)), sigma=my_sigma(t[-1],geo.dist),log=TRUE)
}
optim(c(2,1,100,1),llik)
llik = function(t){
-mvtnorm::dmvnorm(ccr5$Z,mean = rep(t[1],length(ccr5$Z)), sigma=my_sigma(t[-1],geo.dist),log=TRUE)
}
optim(c(2,1,100,1),llik)
optim(c(2,1,100,1),llik)
my_sigma = function(a,d){
a[1] * exp(-(d/a[2])^a[3]) +a[4]*(d==0)
}
llik = function(t){
-mvtnorm::dmvnorm(ccr5$Z,mean = rep(t[1],length(ccr5$Z)), sigma=my_sigma(t[-1],geo.dist),log=TRUE)
}
optim(c(2,1,100,1,0),llik)
my_sigma = function(a,d){
a[1] * exp(-(d/a[2])^a[3]) +exp(a[4])*(d==0)
}
llik = function(t){
-mvtnorm::dmvnorm(ccr5$Z,mean = rep(t[1],length(ccr5$Z)), sigma=my_sigma(t[-1],geo.dist),log=TRUE)
}
optim(c(2,1,100,1,0),llik)
optim(c(3,1,100,1,1),llik)
my_sigma = function(a,d){
a[1] * exp(-(d/a[2])^a[3])
}
llik = function(t){
-mvtnorm::dmvnorm(ccr5$Z,mean = rep(t[1],length(ccr5$Z)), sigma=my_sigma(t[-1],geo.dist),log=TRUE)
}
optim(c(2,1,100,1),llik)
optim(c(3,1,100,1),llik)
optim(c(2,1,100,1),llik)
optim(c(3,1,100,1),llik)
my_sigma = function(a,d){
a[1] * exp(-(d/100)^a[3])
}
llik = function(t){
-mvtnorm::dmvnorm(ccr5$Z,mean = rep(t[1],length(ccr5$Z)), sigma=my_sigma(t[-1],geo.dist),log=TRUE)
}
optim(c(2,1,100,1),llik)
100
optim(c(-2,1,100,1),llik)
optim(c(-3,1,100,1),llik)
optim(c(-2,1,100,1),llik,abstol=0.01)
optim(c(-2,1,100,1),llik,control=list(abstol=0.01))
optim(c(-2,1,100,1),llik,control=list(abstol=0.01))
optim(c(-3,1,200,1),llik)
my_sigma = function(a,d){
a[1] * exp(-(d/a[2])^a[3])
}
llik = function(t){
-mvtnorm::dmvnorm(ccr5$Z,mean = rep(t[1],length(ccr5$Z)), sigma=my_sigma(t[-1],geo.dist),log=TRUE)
}
optim(c(-2,1,100,1),llik,control=list(abstol=0.01))
optim(c(-3,1,200,1),llik)
my_sigma = function(a,d){
a[1] * exp(-(d/a[2])^2)
}
llik = function(t){
-mvtnorm::dmvnorm(ccr5$Z,mean = rep(t[1],length(ccr5$Z)), sigma=my_sigma(t[-1],geo.dist),log=TRUE)
}
optim(c(-2,1,100,1),llik,control=list(abstol=0.01))
optim(c(-2,1,100),llik,control=list(abstol=0.01))
optim(c(-3,1,200),llik)
my_sigma = function(a,d){
a[1] * exp(-(d/a[2]))
}
llik = function(t){
-mvtnorm::dmvnorm(ccr5$Z,mean = rep(t[1],length(ccr5$Z)), sigma=my_sigma(t[-1],geo.dist),log=TRUE)
}
optim(c(-2,1,100),llik,control=list(abstol=0.01))
optim(c(-3,1,200),llik)
